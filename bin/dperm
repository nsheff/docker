#!/bin/bash

container_name="$1"
docker_image="$2"
shift 2
cmd="$@"

if [ -z "$var" ]
then
cmd="bash"
fi
echo "name: ${container_name}\t image: ${docker_image}\t cmd: ${cmd}"

isRunning=`docker ps --filter name=${container_name} --format "table{{.Names}}" | sed '1d' | wc -l`

# Warn of version mismatch

CLOUD_SHA=`docker inspect --format "{{.Id}}" ${docker_image}`
LOCAL_SHA=`docker inspect --format "{{.Id}}" ${container_name}`
NAME=`docker inspect --format '{{.Name}}' rdev | sed "s/\///g"`
if [ "$CLOUD_SHA" != "$LOCAL_SHA" ];then
	echo "Warning: Local version does not match dockerhub"
	echo $CLOUD_SHA $LOCAL_SHA
else
	echo "Version match"
	echo $CLOUD_SHA $LOCAL_SHA
fi

if [ "$isRunning" == "1" ]; then
	echo "Container is running. Attaching..."
	#docker attach ${container_name}
	docker exec -it ${container_name} ${cmd}
else
	exists=`docker ps -a --filter name=${container_name} --format "table{{.Names}}" | sed '1d' | wc -l`
	if [ "$exists" == "1" ]; then
	echo "Container exists but is turned off. Starting and attaching..."
	docker start -ai ${container_name} 
	else
	echo "Container does not exist. Creating a new one..."
	docker_run.sh ${container_name} ${docker_image} ${cmd}
	fi
fi
