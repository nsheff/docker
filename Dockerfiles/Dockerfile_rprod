# Dockerfile for R environment:
# This one would actually build the latest R -- but it's probably better to use
# containers provided by the Rocker project, so this is here for legacy

FROM ubuntu:18.04

MAINTAINER John Doe <jdoe@example.com>


# Each RUN command creates a new layer; Dockerfiles are limited to 127 layers
# RUNning multiple commands in a single RUN statement reduces the number of layers.
# Alternatively, build an image until it reaches the maximum and then use docker export to create an un-layered copy. Then docker import to turn it back into an image, this time with just one layer, and continue building. You lose the history that way.

RUN sudo echo "deb http://cran.at.r-project.org/bin/linux/ubuntu trusty/" >> /etc/apt/sources.list
# add CRAN key
RUN sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9

RUN sudo apt-get update

RUN sudo apt-get install -y --force-yes r-base

# Required for R Package XML
RUN sudo apt-get install -y --force-yes libxml2-dev

# Required for RCurl
RUN apt-get install -y --force-yes libcurl4-gnutls-dev

ADD Rsetup/install_bioconductor.R Rsetup/install_bioconductor.R
RUN Rscript Rsetup/install_bioconductor.R

# I put these COPY statements in separately, so that the whole thing
# isn't invalidated (causing unnecessary cache rebuilds) 
# with an unrelated change in Rsetup/
COPY Rsetup/install_fonts.R Rsetup/install_fonts.R
COPY Rsetup/fonts Rsetup/fonts
RUN Rscript Rsetup/install_fonts.R


ADD Rsetup Rsetup
ADD .Rprofile .Rprofile
RUN Rscript Rsetup/Rsetup.R
RUN Rscript Rsetup/Rsetup.R --packages=Rsetup/rpack_basic.txt
RUN Rscript Rsetup/Rsetup.R --packages=Rsetup/rpack_bio.txt

# You can also use the VOLUME instruction in a Dockerfile to add one or more new volumes to any container created from that image.
